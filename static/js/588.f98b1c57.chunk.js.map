{"version":3,"file":"static/js/588.f98b1c57.chunk.js","mappings":"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","sources":["components/constants/api.constants.js","components/services/common-api.service.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// export const KEY = '6cf2b1d858796017e56b185acc03bccc';\nexport const KEY = '9068359f92c010fa6a3cf763f10a0606';\n// export const PER_PAGE = 20;\nexport const MEDIA_TYPE = 'movie';\nexport const TIME_WINDOWS = 'day';\nexport const API = 'https://api.themoviedb.org/3';\nexport const API_ACTIONS = { TRENDING: 'trending', SEARCH: 'search' };\nexport const API_IMG_POSTER = 'https://image.tmdb.org/t/p/w500';\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport {\n  KEY,\n  MEDIA_TYPE,\n  TIME_WINDOWS,\n  API,\n  API_ACTIONS,\n} from 'components/constants/api.constants.js';\n\nexport const fetchAPIMovies = async (action, search = '') => {\n  const URLString =\n    action === API_ACTIONS.TRENDING\n      ? `${API}/trending/${MEDIA_TYPE}/${TIME_WINDOWS}?api_key=${KEY}`\n      : `${API}/search/${MEDIA_TYPE}?api_key=${KEY}&query=${search}`;\n\n  try {\n    const resolve = await axios.get(URLString);\n\n    if (resolve.status !== 200 || !resolve) {\n      throw new Error('Service is temporarily unavailable .');\n    }\n    return resolve.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchAPIByID = async movieId => {\n  const URLString = `${API}/movie/${movieId}?api_key=${KEY}`;\n  try {\n    const resolve = await axios.get(URLString);\n\n    if (resolve.status !== 200 || !resolve) {\n      throw new Error('Service is temporarily unavailable .');\n    }\n    return resolve.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchReviewsByID = async movieId => {\n  const URLString = `${API}/movie/${movieId}/reviews?api_key=${KEY}`;\n  try {\n    const resolve = await axios.get(URLString);\n\n    if (resolve.status !== 200 || !resolve) {\n      throw new Error('Service is temporarily unavailable .');\n    }\n    return resolve.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const fetchCastByID = async movieId => {\n  const URLString = `${API}/movie/${movieId}/credits?api_key=${KEY}`;\n  try {\n    const resolve = await axios.get(URLString);\n\n    if (resolve.status !== 200 || !resolve) {\n      throw new Error('Service is temporarily unavailable .');\n    }\n    return resolve.data;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLinkBack = styled(Link)`\n  display: inline-block;\n  text-decoration: none;\n  outline: none;\n  font-size: 0.75rem;\n  padding: 0.25rem 0.5rem;\n  border: 1px solid black;\n  border-radius: 0.25rem;\n  background-color: #a6a6a6;\n  color: black;\n  :hover {\n    background-color: #999999;\n  }\n`;\n\nexport const StyledMovieCard = styled.article`\n  display: grid;\n  grid-template-columns: 200px 1fr;\n  max-width: 1600px;\n  margin: 1rem auto;\n`;\n\nexport const StyledPoster = styled.div`\n  height: fit-content;\n`;\n\nexport const StyledDetails = styled.div`\n  padding: 1rem;\n  padding-bottom: 0;\n  font-size: 0.75rem;\n  color: black;\n`;\n\nexport const StyledMovieTitle = styled.h1`\n  font-size: 1.5rem;\n  font-weight: 800;\n  margin-bottom: 1rem;\n`;\n\nexport const StyledMovieSubtitle = styled.h2`\n  font-size: 1rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n`;\n\nexport const StyledText = styled.p`\n  margin-bottom: 1rem;\n`;\n\nexport const StyledAdditional = styled.div`\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n  padding-top: 1rem;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchAPIByID } from 'components/services/common-api.service';\nimport { API_IMG_POSTER } from 'components/constants/api.constants.js';\nimport {\n  StyledMovieCard,\n  StyledPoster,\n  StyledDetails,\n  StyledMovieTitle,\n  StyledMovieSubtitle,\n  StyledText,\n  StyledAdditional,\n  StyledLinkBack,\n} from './MovieDetails.styled.js';\n\nimport noImage from 'components/constants/no_image.jpg';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [goBack] = useState(() => {\n    return location.state?.from ?? '/movies';\n  });\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    fetchAPIByID(movieId)\n      .then(\n        ({\n          title,\n          release_date,\n          vote_average,\n          overview,\n          genres,\n          tagline,\n          poster_path,\n        }) => {\n          const year = release_date.substring(0, 4);\n          const userScore = Math.round(vote_average * 10) + '%';\n          const genreList = genres.map(genre => genre['name']).join(' ');\n          const imgURL = poster_path ? API_IMG_POSTER + poster_path : noImage;\n\n          return setDetails({\n            title,\n            year,\n            userScore,\n            overview,\n            genreList,\n            tagline,\n            imgURL,\n          });\n        }\n      )\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  const { title, year, userScore, overview, genreList, tagline, imgURL } =\n    details;\n\n  return (\n    <>\n      <StyledLinkBack to={goBack}>&#8592; Go back</StyledLinkBack>\n      <StyledMovieCard>\n        <StyledPoster>\n          <img src={imgURL} alt={tagline} />\n        </StyledPoster>\n        <StyledDetails>\n          <StyledMovieTitle>\n            {title} &#40; {year} &#41;\n          </StyledMovieTitle>\n          <StyledText>User score: {userScore}</StyledText>\n          <StyledMovieSubtitle>Overview</StyledMovieSubtitle>\n          <StyledText>{overview}</StyledText>\n          <StyledMovieSubtitle>Genres</StyledMovieSubtitle>\n          <StyledText>{genreList}</StyledText>\n        </StyledDetails>\n      </StyledMovieCard>\n\n      <StyledAdditional>\n        <StyledText>Additional information</StyledText>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </StyledAdditional>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","MEDIA_TYPE","TIME_WINDOWS","API","API_ACTIONS","TRENDING","SEARCH","API_IMG_POSTER","fetchAPIMovies","action","search","URLString","axios","resolve","status","Error","data","toast","message","fetchAPIByID","movieId","fetchReviewsByID","fetchCastByID","StyledLinkBack","styled","Link","StyledMovieCard","StyledPoster","StyledDetails","StyledMovieTitle","StyledMovieSubtitle","StyledText","StyledAdditional","useState","details","setDetails","useParams","location","useLocation","state","from","goBack","useEffect","then","title","release_date","vote_average","overview","genres","tagline","poster_path","year","substring","userScore","Math","round","genreList","map","genre","join","imgURL","noImage","catch","error","console","log","to","src","alt","Suspense"],"sourceRoot":""}